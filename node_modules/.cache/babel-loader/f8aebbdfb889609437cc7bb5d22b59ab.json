{"ast":null,"code":"var _jsxFileName = \"/Users/negeendaudi/Documents/side projects/contact-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import useFetch from \"react-fetch-hook\";\n// import ContactCards from \"./ContactCards\"\n// import {useEffect, useState} from \"react\";\n// const App = () => {\n//   const { isLoading, data, error } = useFetch('https://jsonplaceholder.typicode.com/users')\n//   data && console.log(data)\n//   const [contactList, setContactList] = useState({ initialState:null })\n//   const [filterQuery, setFilterQuery] = useState({ initialState:null })\n//   useEffect(() => {\n//     if (filterQuery) {\n//       //do something\n//     }\n//     else {\n//       setContactList(data?.results)\n//     }\n//   }) //, deps:[data, filterQuery])\n//   return (\n//     <div className = {\"bg-gray-100\"}> \n//       <section> \n//         <form>\n//           <input\n//             type = \"text\"\n//             className = \"ml-20 mt-6 rounded-md p-2\" \n//             placeholder=\"type here to filter...\" \n//           />\n//         </form>\n//       </section>\n//       <section className = \"p-20 grid sm:grid-cols-2 md:grid-cols-4 gap-6\">\n//         <ContactCards contactList = {contactList}/>\n//       </section>\n//     </div>\n//   );\n// }\n// export default App;\nimport useFetch from 'react-fetch-hook';\nimport ContactCards from './ContactCards';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages';\nimport About from './pages/about';\nimport Services from './pages/services';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const url = 'https://jsonplaceholder.typicode.com';\n  const {\n    isLoading,\n    data,\n    error\n  } = useFetch(url + '/users');\n  const [contactList, setContactList] = useState();\n  const [filterQuery, setFilterQuery] = useState();\n  useEffect(() => {\n    if (!filterQuery) {\n      setContactList(data === null || data === void 0 ? void 0 : data.slice(0, 10));\n    } else {\n      const queryString = filterQuery.toLowerCase();\n      const filteredData = data.filter(contact => {\n        // if it's just one letter, return all names that start with it\n        if (queryString.length === 1) {\n          const firstLetter = contact.name.charAt(0).toLowerCase();\n          return firstLetter === queryString;\n        } else {\n          return contact.name.toLowerCase().includes(queryString);\n        }\n      });\n      setContactList(filteredData);\n    }\n  }, [data, filterQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type here to filter...\",\n          onChange: event => setFilterQuery(event.target.value),\n          className: \"ml-20 mt-6 rounded-md p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid sm:grid-cols-2 md:grid-cols-4 gap-6 p-20\",\n      children: [(contactList === null || contactList === void 0 ? void 0 : contactList.length) < 1 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No data matches your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/services\",\n            component: Services\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact-us\",\n            component: Contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ContactCards, {\n        contactList: contactList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9+2zdDKoeqOSD3nTRUI0XG8vh64=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/negeendaudi/Documents/side projects/contact-app/src/App.js"],"names":["useFetch","ContactCards","useEffect","useState","React","Navbar","BrowserRouter","Router","Switch","Route","Home","About","Services","Contact","SignUp","App","url","isLoading","data","error","contactList","setContactList","filterQuery","setFilterQuery","slice","queryString","toLowerCase","filteredData","filter","contact","length","firstLetter","name","charAt","includes","event","target","value"],"mappings":"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","sourcesContent":["// import useFetch from \"react-fetch-hook\";\n// import ContactCards from \"./ContactCards\"\n// import {useEffect, useState} from \"react\";\n\n// const App = () => {\n//   const { isLoading, data, error } = useFetch('https://jsonplaceholder.typicode.com/users')\n//   data && console.log(data)\n\n//   const [contactList, setContactList] = useState({ initialState:null })\n//   const [filterQuery, setFilterQuery] = useState({ initialState:null })\n\n//   useEffect(() => {\n//     if (filterQuery) {\n//       //do something\n//     }\n//     else {\n//       setContactList(data?.results)\n//     }\n//   }) //, deps:[data, filterQuery])\n\n//   return (\n//     <div className = {\"bg-gray-100\"}> \n//       <section> \n//         <form>\n//           <input\n//             type = \"text\"\n//             className = \"ml-20 mt-6 rounded-md p-2\" \n//             placeholder=\"type here to filter...\" \n//           />\n//         </form>\n//       </section>\n//       <section className = \"p-20 grid sm:grid-cols-2 md:grid-cols-4 gap-6\">\n//         <ContactCards contactList = {contactList}/>\n//       </section>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport useFetch from 'react-fetch-hook'\nimport ContactCards from './ContactCards'\nimport {useEffect, useState} from 'react'\n\nimport React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages';\nimport About from './pages/about';\nimport Services from './pages/services';\nimport Contact from './pages/contact';\nimport SignUp from './pages/signup';\n\n\nconst App = () => {\n  const url = 'https://jsonplaceholder.typicode.com'\n  const { isLoading, data, error } = useFetch(url+'/users')\n  const [contactList, setContactList] = useState()\n  const [filterQuery, setFilterQuery] = useState()\n\n  useEffect(() => {\n    if (!filterQuery) {\n      setContactList(data?.slice(0, 10))\n    } else {\n      const queryString = filterQuery.toLowerCase()\n      const filteredData = data.filter(contact => {\n        // if it's just one letter, return all names that start with it\n        if (queryString.length === 1) {\n          const firstLetter = contact.name.charAt(0).toLowerCase()\n          return firstLetter === queryString\n        }\n        else {\n          return contact.name.toLowerCase().includes(queryString)\n        }\n      })\n      setContactList(filteredData)\n    }\n  }, [data, filterQuery])\n\n  return (\n    <div className={\"bg-gray-100\"}>\n      <section>\n        <form>\n          <input\n            type={\"text\"}\n            placeholder={\"type here to filter...\"}\n            onChange={event => setFilterQuery(event.target.value)}\n            className={\"ml-20 mt-6 rounded-md p-2\"}\n          />\n        </form>\n      </section>\n      <section className={\"grid sm:grid-cols-2 md:grid-cols-4 gap-6 p-20\"}>\n        {contactList?.length < 1 && (\n          <h1>No data matches your search</h1>\n        )}\n            <Router>\n            <Navbar />\n            <Switch>\n              <Route path='/' exact component={Home} />\n              <Route path='/about' component={About} />\n              <Route path='/services' component={Services} />\n              <Route path='/contact-us' component={Contact} />\n              <Route path='/sign-up' component={SignUp} />\n            </Switch>\n          </Router>\n        <ContactCards contactList={contactList}/>\n      </section>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}