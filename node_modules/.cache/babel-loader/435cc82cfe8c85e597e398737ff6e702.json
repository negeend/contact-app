{"ast":null,"code":"var _jsxFileName = \"/Users/negeendaudi/Documents/side projects/contact-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import useFetch from \"react-fetch-hook\";\n// import ContactCards from \"./ContactCards\"\n// import {useEffect, useState} from \"react\";\n// const App = () => {\n//   const { isLoading, data, error } = useFetch('https://jsonplaceholder.typicode.com/users')\n//   data && console.log(data)\n//   const [contactList, setContactList] = useState({ initialState:null })\n//   const [filterQuery, setFilterQuery] = useState({ initialState:null })\n//   useEffect(() => {\n//     if (filterQuery) {\n//       //do something\n//     }\n//     else {\n//       setContactList(data?.results)\n//     }\n//   }) //, deps:[data, filterQuery])\n//   return (\n//     <div className = {\"bg-gray-100\"}> \n//       <section> \n//         <form>\n//           <input\n//             type = \"text\"\n//             className = \"ml-20 mt-6 rounded-md p-2\" \n//             placeholder=\"type here to filter...\" \n//           />\n//         </form>\n//       </section>\n//       <section className = \"p-20 grid sm:grid-cols-2 md:grid-cols-4 gap-6\">\n//         <ContactCards contactList = {contactList}/>\n//       </section>\n//     </div>\n//   );\n// }\n// export default App;\nimport useFetch from 'react-fetch-hook';\nimport ContactCards from './ContactCards';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const url = 'https://jsonplaceholder.typicode.com';\n  const {\n    isLoading,\n    data,\n    error\n  } = useFetch(url + '/users');\n  const [contactList, setContactList] = useState();\n  const [filterQuery, setFilterQuery] = useState();\n  data && console.log(data);\n  useEffect(() => {\n    if (!filterQuery) {\n      var _data$results;\n\n      setContactList(data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.slice(0, 10));\n    } else {\n      var _data$results2;\n\n      const queryString = filterQuery.toLowerCase();\n      const filteredData = data === null || data === void 0 ? void 0 : (_data$results2 = data.results) === null || _data$results2 === void 0 ? void 0 : _data$results2.filter(contact => {\n        const fullName = `${contact.name} ${contact.name}`; // if it's just one letter, return all names that start with it\n\n        if (queryString.length === 1) {\n          const firstLetter = contact.name.charAt(0).toLowerCase();\n          return firstLetter === queryString;\n        } else {\n          return fullName.toLowerCase().includes(queryString);\n        }\n      });\n      setContactList(filteredData);\n    }\n  }, [data, filterQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"type here to filter...\",\n          onChange: event => setFilterQuery(event.target.value),\n          className: \"ml-20 mt-6 rounded-md p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid sm:grid-cols-2 md:grid-cols-4 gap-6 p-20\",\n      children: [(contactList === null || contactList === void 0 ? void 0 : contactList.length) < 1 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No data matches your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContactCards, {\n        contactList: contactList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9+2zdDKoeqOSD3nTRUI0XG8vh64=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/negeendaudi/Documents/side projects/contact-app/src/App.js"],"names":["useFetch","ContactCards","useEffect","useState","App","url","isLoading","data","error","contactList","setContactList","filterQuery","setFilterQuery","console","log","results","slice","queryString","toLowerCase","filteredData","filter","contact","fullName","name","length","firstLetter","charAt","includes","event","target","value"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,GAAG,GAAG,sCAAZ;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,MAA6BR,QAAQ,CAACK,GAAG,GAAC,QAAL,CAA3C;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;AAEAI,EAAAA,IAAI,IAAIM,OAAO,CAACC,GAAR,CAAYP,IAAZ,CAAR;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,WAAL,EAAkB;AAAA;;AAChBD,MAAAA,cAAc,CAACH,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEQ,OAAP,kDAAC,cAAeC,KAAf,CAAqB,CAArB,EAAwB,EAAxB,CAAD,CAAd;AACD,KAFD,MAEO;AAAA;;AACL,YAAMC,WAAW,GAAGN,WAAW,CAACO,WAAZ,EAApB;AACA,YAAMC,YAAY,GAAGZ,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAEQ,OAAT,mDAAG,eAAeK,MAAf,CAAsBC,OAAO,IAAI;AACpD,cAAMC,QAAQ,GAAI,GAAED,OAAO,CAACE,IAAK,IAAGF,OAAO,CAACE,IAAK,EAAjD,CADoD,CAGpD;;AACA,YAAIN,WAAW,CAACO,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,gBAAMC,WAAW,GAAGJ,OAAO,CAACE,IAAR,CAAaG,MAAb,CAAoB,CAApB,EAAuBR,WAAvB,EAApB;AACA,iBAAOO,WAAW,KAAKR,WAAvB;AACD,SAHD,MAIK;AACH,iBAAOK,QAAQ,CAACJ,WAAT,GAAuBS,QAAvB,CAAgCV,WAAhC,CAAP;AACD;AACF,OAXoB,CAArB;AAYAP,MAAAA,cAAc,CAACS,YAAD,CAAd;AACD;AACF,GAnBQ,EAmBN,CAACZ,IAAD,EAAOI,WAAP,CAnBM,CAAT;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA,4BACE;AAAA,6BACE;AAAA,+BACE;AACE,UAAA,IAAI,EAAE,MADR;AAEE,UAAA,WAAW,EAAE,wBAFf;AAGE,UAAA,QAAQ,EAAEiB,KAAK,IAAIhB,cAAc,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHnC;AAIE,UAAA,SAAS,EAAE;AAJb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAS,MAAA,SAAS,EAAE,+CAApB;AAAA,iBACG,CAAArB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEe,MAAb,IAAsB,CAAtB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE,QAAC,YAAD;AAAc,QAAA,WAAW,EAAEf;AAA3B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAjDD;;GAAML,G;UAE+BJ,Q;;;KAF/BI,G;AAmDN,eAAeA,GAAf","sourcesContent":["// import useFetch from \"react-fetch-hook\";\n// import ContactCards from \"./ContactCards\"\n// import {useEffect, useState} from \"react\";\n\n// const App = () => {\n//   const { isLoading, data, error } = useFetch('https://jsonplaceholder.typicode.com/users')\n//   data && console.log(data)\n\n//   const [contactList, setContactList] = useState({ initialState:null })\n//   const [filterQuery, setFilterQuery] = useState({ initialState:null })\n\n//   useEffect(() => {\n//     if (filterQuery) {\n//       //do something\n//     }\n//     else {\n//       setContactList(data?.results)\n//     }\n//   }) //, deps:[data, filterQuery])\n\n//   return (\n//     <div className = {\"bg-gray-100\"}> \n//       <section> \n//         <form>\n//           <input\n//             type = \"text\"\n//             className = \"ml-20 mt-6 rounded-md p-2\" \n//             placeholder=\"type here to filter...\" \n//           />\n//         </form>\n//       </section>\n//       <section className = \"p-20 grid sm:grid-cols-2 md:grid-cols-4 gap-6\">\n//         <ContactCards contactList = {contactList}/>\n//       </section>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport useFetch from 'react-fetch-hook'\nimport ContactCards from './ContactCards'\nimport {useEffect, useState} from 'react'\n\nconst App = () => {\n  const url = 'https://jsonplaceholder.typicode.com'\n  const { isLoading, data, error } = useFetch(url+'/users')\n  const [contactList, setContactList] = useState()\n  const [filterQuery, setFilterQuery] = useState()\n\n  data && console.log(data)\n\n  useEffect(() => {\n    if (!filterQuery) {\n      setContactList(data?.results?.slice(0, 10))\n    } else {\n      const queryString = filterQuery.toLowerCase()\n      const filteredData = data?.results?.filter(contact => {\n        const fullName = `${contact.name} ${contact.name}`\n\n        // if it's just one letter, return all names that start with it\n        if (queryString.length === 1) {\n          const firstLetter = contact.name.charAt(0).toLowerCase()\n          return firstLetter === queryString\n        }\n        else {\n          return fullName.toLowerCase().includes(queryString)\n        }\n      })\n      setContactList(filteredData)\n    }\n  }, [data, filterQuery])\n\n  return (\n    <div className={\"bg-gray-100\"}>\n      <section>\n        <form>\n          <input\n            type={\"text\"}\n            placeholder={\"type here to filter...\"}\n            onChange={event => setFilterQuery(event.target.value)}\n            className={\"ml-20 mt-6 rounded-md p-2\"}\n          />\n        </form>\n      </section>\n      <section className={\"grid sm:grid-cols-2 md:grid-cols-4 gap-6 p-20\"}>\n        {contactList?.length < 1 && (\n          <h1>No data matches your search</h1>\n        )}\n        <ContactCards contactList={contactList}/>\n      </section>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}